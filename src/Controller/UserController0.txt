<?php

namespace App\Controller;

use App\BLL\JuegoBLL;
use App\Entity\Juego;
use App\Entity\User;
use App\Form\JuegoType;
use App\Repository\JuegoRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Attribute\Route;

#[Route('/perfil')]
final class UserController extends AbstractController
{
    #[Route('/{id}', name: 'perfil_user', methods: ['GET'])]
    public function show(User $user): Response
    {
        return $this->render('juego/show.html.twig', [
            'user' => $user
        ]);
    }

    #[Route('/edit/{id}', name: 'videojuego_edit', methods: ['GET', 'POST'])]
    public function edit(Request $request, Juego $juego, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(JuegoType::class, $juego);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->flush();

            return $this->redirectToRoute('videojuegos_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->render('juego/edit.html.twig', [
            'juego' => $juego,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'videojuego_delete', methods: ['POST'])]
    public function delete(Request $request, Juego $juego, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete' . $juego->getId(), $request->getPayload()->getString('_token'))) {
            $entityManager->remove($juego);
            $entityManager->flush();
        }

        return $this->redirectToRoute('videojuegos_index', [], Response::HTTP_SEE_OTHER);
    }

    #[Route('/{id}', name: 'videojuego_delete_json', methods: ['DELETE'])]
    public function deleteJson(Juego $juego, JuegoRepository $juegoRepository): Response
    {
        $juegoRepository->remove($juego, true);
        return new JsonResponse(['eliminado' => true]);
    }
}
